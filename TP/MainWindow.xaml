<Window x:Class="TP.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:wpfTool="clr-namespace:Xceed.Wpf.Toolkit;assembly=Xceed.Wpf.Toolkit"
        xmlns:local="clr-namespace:TP"
        xmlns:vm="clr-namespace:TP.View"
        xmlns:common="clr-namespace:TP.Common"
        xmlns:uc="clr-namespace:TP.UserControl"
        mc:Ignorable="d"
        x:Name="MWindow"
        Title="MainWindow" Loaded="MainWindow_OnLoaded"  Closed="MWindow_Closed"
        WindowState="Maximized" WindowStyle="None" Topmost="True" 
        >


    <Window.DataContext>
        <vm:MainView></vm:MainView>
    </Window.DataContext>
    <Window.Resources>
        <Style x:Key="WrapButtonStyle" TargetType="Button">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <TextBlock Text="{TemplateBinding Content}" TextWrapping="Wrap"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="RadioToggleButtonStyle" TargetType="{x:Type RadioButton}" BasedOn="{StaticResource {x:Type ToggleButton}}" >

            <Setter Property="Background" Value="Blue"></Setter>
            <Style.Triggers>
                <Trigger Property="IsChecked" Value="True">
                    <Setter Property="Background" Value="Red" />
                </Trigger>
            </Style.Triggers>
        </Style>
        <common:CompareConverter x:Key="CompareConverter"></common:CompareConverter>
        <common:EmptyStringConverter x:Key="EmptyStringConverter"></common:EmptyStringConverter>
        <common:RadioBoolToIntConverter x:Key="RadioBoolToIntConverter"></common:RadioBoolToIntConverter>
        
        <common:BoolToVisibilityConverter x:Key="ReversedBoolToVisibilityConverter" TrueValue="Collapsed" FalseValue="Visible"></common:BoolToVisibilityConverter>
        <common:BoolToVisibilityConverter x:Key="BoolToVisibilityConverter" TrueValue="Visible" FalseValue="Collapsed"></common:BoolToVisibilityConverter>
        <Style TargetType="{x:Type TextBox}">
            <Style.Triggers>
                <Trigger Property="Validation.HasError" Value="true">
                    <Setter Property="Background" Value="Pink"/>
                    <Setter Property="Foreground" Value="Black"/>
                </Trigger>
            </Style.Triggers>
            <Setter Property="Validation.ErrorTemplate">
                <Setter.Value>
                    <ControlTemplate>

                        <DockPanel>
                            <StackPanel Orientation="Horizontal" DockPanel.Dock="Top">
                                <Grid Width="12" Height="12">
                                    <Ellipse Width="12" Height="12" Fill="Red" HorizontalAlignment="Center" VerticalAlignment="Center"></Ellipse>
                                    <TextBlock Foreground="White" FontWeight="Heavy" FontSize="8" HorizontalAlignment="Center" VerticalAlignment="Center" TextAlignment="Center" 
                                               ToolTip="{Binding ElementName=ErrorAdorner, Path=AdornedElement.(Validation.Errors)[0].ErrorContent}">X</TextBlock>
                                </Grid>
                                <TextBlock Foreground="Red"  Margin="2,0,0,0" Text="{Binding ElementName=ErrorAdorner, Path=AdornedElement.(Validation.Errors)[0].ErrorContent}">

                                </TextBlock>
                            </StackPanel>
                            <AdornedElementPlaceholder x:Name="ErrorAdorner" ></AdornedElementPlaceholder>
                        </DockPanel>

                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>
    <Grid>
        <uc:PopUpUserControl ErrorMsg="{Binding Path=ErrorMsg}"></uc:PopUpUserControl>

        <DockPanel>
            <Grid DockPanel.Dock="Top">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="auto"></ColumnDefinition>
                    <ColumnDefinition Width="*"></ColumnDefinition>
                    <ColumnDefinition Width="auto"></ColumnDefinition>
                    <ColumnDefinition Width="auto"></ColumnDefinition>
                    <ColumnDefinition Width="auto"></ColumnDefinition>
                </Grid.ColumnDefinitions>
                <TextBlock Width="84" Grid.Column="0">
                    <Button Content="exit" Click="ExitBtn_Click" Grid.Column="4" Height="50" ></Button>
                    <Label Width="84"></Label>
                </TextBlock>
                <ItemsControl Grid.Column="1" ItemsSource="{Binding Path=TPBillRefs}">
                    <ItemsControl.ItemsPanel>
                        <ItemsPanelTemplate>
                            <WrapPanel Orientation="Horizontal"/>
                        </ItemsPanelTemplate>
                    </ItemsControl.ItemsPanel>
                    <ItemsControl.ItemTemplate>
                        <DataTemplate>
                            <RadioButton  Height="60" Width="80" Tag="{Binding BillRefId}" GroupName="Users"  Style="{StaticResource RadioToggleButtonStyle}" Click="RadioButton_Click" Checked="ToggleButton_OnChecked">
                                <RadioButton.Content>
                                    <TextBlock Text="{Binding TPCallIn.CellNumber}" TextWrapping="Wrap"></TextBlock>
                                    
                                </RadioButton.Content>
                                <RadioButton.IsChecked>
                                    <MultiBinding Converter="{StaticResource CompareConverter}">
                                        <Binding Path="BillRefId"></Binding>
                                        <Binding RelativeSource="{RelativeSource FindAncestor, AncestorType={x:Type Window}}" Path="mainView.SelectedTpBillRefMv.BillRefId"></Binding>
                                    </MultiBinding>
                                </RadioButton.IsChecked>
                            </RadioButton>
                        </DataTemplate>
                    </ItemsControl.ItemTemplate>
                </ItemsControl>


                <Button Content="Add" Click="Add_Click" Grid.Column="2" Height="50"></Button>
                <Button Content="Close" Click="CloseCurrTab_Click" Grid.Column="3" Height="50"></Button>
                <Button Content="Hide" Click="HideBtn_Click" Grid.Column="4" Height="50"></Button>
                
                
            </Grid>


            <Grid HorizontalAlignment="Stretch" VerticalAlignment="Center" DockPanel.Dock="Top">
                <Grid.RowDefinitions>
                    <RowDefinition Height="25"></RowDefinition>
                </Grid.RowDefinitions>
                <Line></Line>
            </Grid>
            <Grid Margin="0,0,0,20" HorizontalAlignment="Stretch" VerticalAlignment="Center" DockPanel.Dock="Top">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="2*" />

                    <ColumnDefinition Width="10" />
                    <ColumnDefinition Width="4*" />

                    <ColumnDefinition Width="10" />
                    <ColumnDefinition Width="2*" />

                    <ColumnDefinition Width="10" />
                    <ColumnDefinition Width="2*" />
                    <ColumnDefinition Width="2*" />
                </Grid.ColumnDefinitions>

                <Label Grid.Column="1" Content="Cell:"/>

                <Grid Grid.Column="2" HorizontalAlignment="Stretch" VerticalAlignment="Center">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="4*" />
                        <ColumnDefinition Width="3*" />
                    </Grid.ColumnDefinitions>
                    <TextBox x:Name="callIdTB" Grid.Column="0" Text="{Binding Path=SelectedTpBillRefMv.TPCallIn.CellNumber}"  IsReadOnly="{Binding Path=SelectedTpBillRefMv.TPCallIn.CellNumber, Converter={StaticResource EmptyStringConverter}}"/>
                    <Button Grid.Column="1" Visibility="{Binding ElementName=callIdTB, Path=IsReadOnly, Converter={StaticResource ReversedBoolToVisibilityConverter}}" Click="CallInSave_Click">Save</Button>
                </Grid>

                
                

                <Label Grid.Column="3" Content="Start:"/>
                <Label Grid.Column="4" Content="{Binding Path=SelectedTpBillRefMv.TPCallIn.StartDate}"/>

                <Label Grid.Column="5" Content="End:"/>
                <Label Grid.Column="6" Content="{Binding Path=SelectedTpBillRefMv.TPCallIn.EndDate}"/>


            </Grid>


            <TabControl TabStripPlacement="Left" x:Name="tPTabControl" Margin="1,0,0,0" SelectionChanged="TPTabControl_OnSelectionChanged">
                <TabControl.Resources>
                    <Style TargetType="{x:Type TabItem}">
                        <Setter Property="HeaderTemplate">
                            <Setter.Value>
                                <DataTemplate>
                                    <ContentPresenter Content="{TemplateBinding Content}">
                                        <ContentPresenter.LayoutTransform>
                                            <RotateTransform Angle="0" />
                                        </ContentPresenter.LayoutTransform>
                                    </ContentPresenter>
                                </DataTemplate>
                            </Setter.Value>
                        </Setter>
                        <Setter Property="Padding" Value="3" />
                    </Style>
                </TabControl.Resources>
                <TabItem Header="UserDetails" Foreground="Blue" Height="80" IsSelected="True">
                    <StackPanel Margin="2,0,0,0">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="2*" />
                                <ColumnDefinition Width="2*" />

                                <ColumnDefinition Width="2*" />
                                <ColumnDefinition Width="2*" />

                                <ColumnDefinition Width="1*" />
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="20"></RowDefinition>
                                <RowDefinition Height="30"></RowDefinition>
                                <RowDefinition Height="30"></RowDefinition>
                                <RowDefinition Height="30"></RowDefinition>
                            </Grid.RowDefinitions>

                            <Label Visibility="Hidden" Grid.Column="0" Grid.Row="1" Content="UserId:" HorizontalAlignment="Right"/>
                            <Label Visibility="Hidden" Grid.Column="1" Grid.Row="1" Content="{Binding Path=UsersTabView.TPUserMV.UserId}"/>

                            <Label Grid.Column="0" Grid.Row="1" Content="Title:" HorizontalAlignment="Right"/>
<!--                            
                            <TextBox Grid.Column="1" Grid.Row="1" Text="{Binding Path=UsersTabView.TPUserMV.Gender}"/>
-->
                            <StackPanel Orientation="Horizontal" Grid.Column="1" Grid.ColumnSpan="4" Grid.Row="1" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                                <RadioButton Content="Ms" GroupName="TitleGroup" Width="60" IsChecked="{Binding Path=UsersTabView.TPUserMV.Gender, Converter={StaticResource RadioBoolToIntConverter}, ConverterParameter=0}">
                                    <RadioButton.Template>
                                        <ControlTemplate>
                                            <ToggleButton IsChecked="{Binding IsChecked, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}"
                                                Content="{Binding Content, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}"/>
                                        </ControlTemplate>
                                    </RadioButton.Template>
                                </RadioButton>
                                <RadioButton Content="Mr" GroupName="TitleGroup" Width="60" IsChecked="{Binding Path=UsersTabView.TPUserMV.Gender, Converter={StaticResource RadioBoolToIntConverter}, ConverterParameter=1}">
                                    <RadioButton.Template>
                                        <ControlTemplate>
                                            <ToggleButton IsChecked="{Binding IsChecked, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}"
                                                Content="{Binding Content, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}"/>
                                        </ControlTemplate>
                                    </RadioButton.Template>
                                </RadioButton>
                                <RadioButton Content="Mrs" GroupName="TitleGroup" Width="60" IsChecked="{Binding Path=UsersTabView.TPUserMV.Gender, Converter={StaticResource RadioBoolToIntConverter}, ConverterParameter=2}">
                                    <RadioButton.Template>
                                        <ControlTemplate>
                                            <ToggleButton IsChecked="{Binding IsChecked, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}"
                                                Content="{Binding Content, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}"/>
                                        </ControlTemplate>
                                    </RadioButton.Template>
                                </RadioButton>
                                <RadioButton Content="Miss" GroupName="TitleGroup" Width="60" IsChecked="{Binding Path=UsersTabView.TPUserMV.Gender, Converter={StaticResource RadioBoolToIntConverter}, ConverterParameter=3}">
                                    <RadioButton.Template>
                                        <ControlTemplate>
                                            <ToggleButton IsChecked="{Binding IsChecked, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}"
                                                Content="{Binding Content, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}"/>
                                        </ControlTemplate>
                                    </RadioButton.Template>
                                </RadioButton>
                            </StackPanel>

                            <Label Grid.Column="0" Grid.Row="2" Content="FirstName:" HorizontalAlignment="Right"/>
                            <TextBox Grid.Column="1" Grid.Row="2" Text="{Binding Path=UsersTabView.TPUserMV.FirstName}"/>

                            <Label Grid.Column="2" Grid.Row="2" Content="LastName:" HorizontalAlignment="Right"/>
                            <TextBox Grid.Column="3" Grid.Row="2" Text="{Binding Path=UsersTabView.TPUserMV.LastName}"/>

                            <StackPanel Grid.ColumnSpan="4" Grid.Row="3" Orientation="Horizontal" HorizontalAlignment="Right">
                                <Button HorizontalAlignment="Right" Click="UserClear_OnClick">New</Button>
                                <Button HorizontalAlignment="Right" Click="UserSave_OnClick">Save</Button>
                            </StackPanel>
                        </Grid>

                        <Grid>

                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="10*"></ColumnDefinition>
                                <ColumnDefinition Width="10*"></ColumnDefinition>
                                <ColumnDefinition Width="1*"></ColumnDefinition>
                                <ColumnDefinition Width="1*"></ColumnDefinition>
                            </Grid.ColumnDefinitions>

                            <ListBox ItemsSource="{Binding Path=UsersTabView.TPUserAddressMVs}" SelectionChanged="ListBox_SelectionChanged" 
                                     SelectedItem="{Binding Path=UsersTabView.TPUserAddressMVs.SelectedItem,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"
                                     >
                                <ListBox.ItemContainerStyle>
                                    <Style TargetType="ListBoxItem">
                                        <Style.Triggers>
                                            <Trigger Property="IsSelected" Value="True" >
                                                <Setter Property="FontWeight" Value="Bold" />
                                                <Setter Property="Background" Value="Black" />
                                                <Setter Property="Foreground" Value="Red" />
                                            </Trigger>
                                        </Style.Triggers>
                                    </Style>
                                </ListBox.ItemContainerStyle>
                                <ListBox.ItemTemplate>
                                    <DataTemplate>
                                        <WrapPanel Tag="{Binding UserAddressId}">
                                            <TextBlock Text="  " />
                                            <TextBlock Text="  " />
                                            <TextBlock Text="{Binding HouseNumber}" FontWeight="Bold" />
                                            <TextBlock Text=" " />
                                            <TextBlock Text="{Binding AddressField1}" FontWeight="Bold" />
                                            <TextBlock Text=", " />
                                            <TextBlock Text="{Binding AddressField2}" FontWeight="Bold" />
                                            <TextBlock Text=", " />
                                            <TextBlock Text="{Binding AddressField3}" FontWeight="Bold" />
                                            <TextBlock Text=", " />
                                            <TextBlock Text="{Binding TownCity}" FontWeight="Bold" />
                                            <TextBlock Text=", " />
                                            <TextBlock Text="{Binding Postcode}" FontWeight="Bold" />
                                        </WrapPanel>
                                    </DataTemplate>
                                </ListBox.ItemTemplate>
                            </ListBox>

                            <Grid Grid.Column="1" Grid.ColumnSpan="2">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="2*" />
                                    <ColumnDefinition Width="3*" />
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="20"></RowDefinition>
                                    <RowDefinition Height="30"></RowDefinition>
                                    <RowDefinition Height="30"></RowDefinition>
                                    <RowDefinition Height="30"></RowDefinition>
                                    <RowDefinition Height="30"></RowDefinition>
                                    <RowDefinition Height="30"></RowDefinition>
                                    <RowDefinition Height="30"></RowDefinition>
                                    <RowDefinition Height="30"></RowDefinition>
                                    <RowDefinition Height="30"></RowDefinition>
                                    <RowDefinition Height="30"></RowDefinition>
                                    <RowDefinition Height="30"></RowDefinition>
                                    <RowDefinition Height="30"></RowDefinition>
                                    <RowDefinition Height="30"></RowDefinition>
                                </Grid.RowDefinitions>

                                <Label Grid.Column="0" Grid.Row="1" Content="HouseNumber:" HorizontalAlignment="Right"/>
                                <TextBox Grid.Column="1" Grid.Row="1" Text="{Binding Path=UsersTabView.TPUserAddressMV.HouseNumber}"/>

                                <Label Grid.Column="0" Grid.Row="2" Content="AddressField1:" HorizontalAlignment="Right"/>
                                <TextBox Grid.Column="1" Grid.Row="2" Text="{Binding Path=UsersTabView.TPUserAddressMV.AddressField1}"/>

                                <Label Grid.Column="0" Grid.Row="3" Content="AddressField2" HorizontalAlignment="Right"/>
                                <TextBox Grid.Column="1" Grid.Row="3" Text="{Binding Path=UsersTabView.TPUserAddressMV.AddressField2}"/>

                                <Label Grid.Column="0" Grid.Row="4" Content="AddressField3" HorizontalAlignment="Right"/>
                                <TextBox Grid.Column="1" Grid.Row="4" Text="{Binding Path=UsersTabView.TPUserAddressMV.AddressField3}"/>

                                <Label Grid.Column="0" Grid.Row="5" Content="TownCity" HorizontalAlignment="Right"/>
                                <TextBox Grid.Column="1" Grid.Row="5" Text="{Binding Path=UsersTabView.TPUserAddressMV.TownCity}"/>

                                <Label Grid.Column="0" Grid.Row="6" Content="Postcode" HorizontalAlignment="Right"/>
                                <Grid Grid.Column="1" Grid.Row="6">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*"></ColumnDefinition>
                                        <ColumnDefinition Width="auto" ></ColumnDefinition>
                                    </Grid.ColumnDefinitions>

                                    <TextBox  Text="{Binding Path=UsersTabView.TPUserAddressMV.Postcode}"/>
                                    <StackPanel Grid.Column="1" Orientation="Horizontal" HorizontalAlignment="Right">
                                        <Button HorizontalAlignment="Right"  Content="LCode" Click="LCodeBtn_Click" 
                                                Visibility="{Binding Path=UsersTabView.EnabledGmap, Converter={StaticResource ReversedBoolToVisibilityConverter}}"/>
                                        <Button HorizontalAlignment="Right"  Content="Find" Click="GCodeBtn_Click"
                                                Visibility="{Binding Path=UsersTabView.EnabledGmap, Converter={StaticResource BoolToVisibilityConverter}}"/>
                                        <Button HorizontalAlignment="Right"  Content="Map" Click="GmapBtn_Click"
                                                Visibility="{Binding Path=UsersTabView.EnabledGmap, Converter={StaticResource BoolToVisibilityConverter}}"/>
                                    </StackPanel>
                                    
                                </Grid>
                                

                                <Label Grid.Column="0" Grid.Row="7" Content="Country" HorizontalAlignment="Right"/>
                                <TextBox Grid.Column="1" Grid.Row="7" Text="{Binding Path=UsersTabView.TPUserAddressMV.Country}"/>

                                <Label Grid.Column="0" Grid.Row="8" Content="Delivery Miles" HorizontalAlignment="Right"/>
                                <TextBox Grid.Column="1" Grid.Row="8" Text="{Binding Path=UsersTabView.TPUserAddressMV.DeliveryMiles}" TextChanged="TextBox_LostFocus"/>

                                <Label Grid.Column="0" Grid.Row="9" Content="Initial Delivery Fee" HorizontalAlignment="Right"/>
                                <TextBox Grid.Column="1" Grid.Row="9" Text="{Binding Path=UsersTabView.TPBillRefMV.DeliverFeeOrigin}" />

                                <StackPanel Grid.ColumnSpan="2" Grid.Row="10" Orientation="Horizontal" HorizontalAlignment="Right">
                                    <Button HorizontalAlignment="Right" Click="UserAddressRemove_OnClick">Remove</Button>
                                    <Button HorizontalAlignment="Right" Click="UserAddressClear_OnClick">New</Button>
                                    <Button HorizontalAlignment="Right" Click="UserAddressSave_OnClick">Save</Button>
                                </StackPanel>
                            </Grid>
                        </Grid>
<!-- example of validation
                        <TextBox Height="30" x:Name="txtinput" Background="AliceBlue" Width="189" AllowDrop="True" Text="{Binding UsersTabView.TPBillRefMV.TPUser.FirstName, ValidatesOnDataErrors=True, UpdateSourceTrigger=PropertyChanged, NotifyOnValidationError=True}" />
                        <Button Content="Query" Name="QueryUser" Click="QueryUser_OnClick">
                            <Button.Style>
                                <Style TargetType="{x:Type Button}">
                                    <Setter Property="IsEnabled" Value="false" />
                                    <Style.Triggers>
                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition Binding="{Binding ElementName=txtinput, Path=(Validation.HasError)}" Value="false" />
                                            </MultiDataTrigger.Conditions>
                                            <Setter Property="IsEnabled" Value="true" />
                                        </MultiDataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Button.Style>
                        </Button>
-->                        
                    </StackPanel>
                </TabItem>
                <TabItem Header="OrderHistory" Foreground="YellowGreen" Height="80" >
                    <DockPanel>
                        <StackPanel DockPanel.Dock="Top">
                            <!-- user infos -->
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"></ColumnDefinition>
                                    <ColumnDefinition Width="2*"></ColumnDefinition>
                                    <ColumnDefinition Width="2*"></ColumnDefinition>
                                    <ColumnDefinition Width="*"></ColumnDefinition>
                                </Grid.ColumnDefinitions>
                                <Label Grid.Column="1" Content="{Binding Path=OrderHistoryTabView.TPBillRefMV.TPUser.FirstName}"></Label>
                                <Label Grid.Column="2" Content="{Binding Path=OrderHistoryTabView.TPBillRefMV.TPUser.LastName}"></Label>
                            </Grid>
                        </StackPanel>
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"></ColumnDefinition>
                                <ColumnDefinition Width="*"></ColumnDefinition>
                            </Grid.ColumnDefinitions>
                            <!--Last paid order -->
                            
                            <Grid Column="0">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"></RowDefinition>
                                    <RowDefinition Height="Auto"></RowDefinition>
                                </Grid.RowDefinitions>
                                <Label Grid.Row="0" HorizontalAlignment="Center" Content="Last Order" FontSize="14" FontWeight="Bold">
                                </Label>
                                <Border BorderBrush="Black" BorderThickness="2" Grid.Row="1">
                                    <uc:BillUserControl BillRefId="{Binding OrderHistoryTabView.LastBillRefId, UpdateSourceTrigger=PropertyChanged}"/>
                                </Border>
                            </Grid>
                            <!--favorite -->
                            <Grid Column="1">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"></RowDefinition>
                                    <RowDefinition Height="Auto"></RowDefinition>
                                </Grid.RowDefinitions>
                                <Label Grid.Row="0" HorizontalAlignment="Center" Content="Favourite Food" FontSize="14" FontWeight="Bold">
                                </Label>
                                <Border BorderBrush="Black" BorderThickness="2" Grid.Row="1">
                                    <uc:FavouriteOrderUserControl UserId="{Binding OrderHistoryTabView.TPBillRefMV.UserId_FK, UpdateSourceTrigger=PropertyChanged}"/>
                                </Border>
                            </Grid>
                        </Grid>
                    </DockPanel>
                </TabItem>

                <TabItem Header="Delivery" Foreground="Green" Height="80" >
                    <DockPanel>
                        <StackPanel DockPanel.Dock="Top">
                            <!-- user infos -->
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"></ColumnDefinition>
                                    <ColumnDefinition Width="2*"></ColumnDefinition>
                                    <ColumnDefinition Width="2*"></ColumnDefinition>
                                    <ColumnDefinition Width="*"></ColumnDefinition>
                                </Grid.ColumnDefinitions>
                                <Label Grid.Column="1" Content="{Binding Path=DeliveryTabView.TPBillRefMV.TPUser.FirstName}"></Label>
                                <Label Grid.Column="2" Content="{Binding Path=DeliveryTabView.TPBillRefMV.TPUser.LastName}"></Label>
                            </Grid>
                        </StackPanel>
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"></ColumnDefinition>
                                <ColumnDefinition Width="*"></ColumnDefinition>
                            </Grid.ColumnDefinitions>
                            <!--Bill Infos -->

                            <Grid Column="0">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"></RowDefinition>
                                    <RowDefinition Height="Auto"></RowDefinition>
                                    <RowDefinition Height="Auto"></RowDefinition>
                                </Grid.RowDefinitions>
                                <Label Grid.Row="0" HorizontalAlignment="Center" Content="Bill Infos" FontSize="14" FontWeight="Bold">
                                </Label>
                                <ComboBox ItemsSource="{Binding DeliveryTabView.UnBindingBillMvs}" SelectedItem="{Binding Path=DeliveryTabView.UnBindingBillMvs.SelectedItem}" 
                                          SelectionChanged="BillCbx_OnSelectionChanged">
                                    <ComboBox.ItemTemplate>
                                        <DataTemplate>
                                            <Grid>
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition></ColumnDefinition>
                                                    <ColumnDefinition></ColumnDefinition>
                                                </Grid.ColumnDefinitions>
                                                <TextBlock Grid.Column="0" Text="{Binding Path=TableName}"></TextBlock>
                                                <TextBlock Grid.Column="1" Text="{Binding Path=BillID}"></TextBlock>
                                            </Grid>
                                        </DataTemplate>
                                    </ComboBox.ItemTemplate>
                                </ComboBox>
                                <Border BorderBrush="Black" BorderThickness="2" Grid.Row="1">
                                    <uc:BillUserControl x:Name="BUControl" BillRefId="{Binding Path=DeliveryTabView.TPBillRefMV.BillRefId}"/>
                                </Border>

                                <StackPanel Orientation="Horizontal" Grid.Row="2" HorizontalAlignment="Right">
                                    <Button Content="Clear" Click="Clear_Click"/>
                                    <Button Content="Reload" Click="Reload_Click"/>
                                </StackPanel>
                            </Grid>

                            <!--drivers -->

                            <Grid Column="1">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"></RowDefinition>
                                    <RowDefinition Height="Auto"></RowDefinition>
                                    <RowDefinition Height="Auto"></RowDefinition>
                                </Grid.RowDefinitions>
                                <Label Grid.Row="0" HorizontalAlignment="Center" Content="Delivery Infos" FontSize="14" FontWeight="Bold">
                                </Label>
                                <Border BorderBrush="Black" BorderThickness="2" Grid.Row="1">
                                    <DataGrid Grid.ColumnSpan="4" Grid.Row="1" ItemsSource="{Binding Path=DeliveryTabView.TpDriverMVs, UpdateSourceTrigger=PropertyChanged}" AutoGenerateColumns="False"  IsReadOnly="True" >
                                        <DataGrid.Columns>
                                            <DataGridTemplateColumn IsReadOnly="False">
                                                <DataGridTemplateColumn.CellTemplate>
                                                    <DataTemplate>
                                                        <RadioButton GroupName="DriversRB" Content="" Checked="DriverRadioButton_OnChecked" Tag="{Binding Path=DriverId}">
                                                            <RadioButton.IsChecked>
                                                                <MultiBinding Converter="{StaticResource CompareConverter}">
                                                                    <Binding RelativeSource="{RelativeSource FindAncestor, AncestorType={x:Type Window}}" Path="mainView.DeliveryTabView.TPDeliverMV.DriverId_FK"/>
                                                                    <Binding Path="DriverId"></Binding>
                                                                </MultiBinding>
                                                            </RadioButton.IsChecked>
                                                        </RadioButton>
                                                    </DataTemplate>
                                                </DataGridTemplateColumn.CellTemplate>
                                            </DataGridTemplateColumn>
                                            
                                            <DataGridTextColumn Visibility="Hidden" Header="DriverId" Width="*" Binding="{Binding Path=DriverId}" x:Name="DriverIdColumn">
                                            </DataGridTextColumn>
                                            <DataGridTextColumn Header="FirstName" Width="*" Binding="{Binding Path=FirstName}">
                                            </DataGridTextColumn>
                                            <DataGridTextColumn Header="LastName" Width="*" Binding="{Binding Path=LastName}">
                                            </DataGridTextColumn>
                                            <DataGridTextColumn Header="Cell" Width="*" Binding="{Binding Path=CellName}">
                                            </DataGridTextColumn>
                                        </DataGrid.Columns>
                                    </DataGrid>
                                </Border>

                                <Grid Grid.Row="2">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*"></ColumnDefinition>
                                        <ColumnDefinition Width="2*"></ColumnDefinition>
                                        <ColumnDefinition Width="2*"></ColumnDefinition>
                                        <ColumnDefinition Width="*"></ColumnDefinition>
                                    </Grid.ColumnDefinitions>
                                    <Grid.RowDefinitions>
                                        <RowDefinition></RowDefinition>
                                        <RowDefinition></RowDefinition>
                                        <RowDefinition></RowDefinition>
                                        <RowDefinition></RowDefinition>
                                        <RowDefinition></RowDefinition>
                                    </Grid.RowDefinitions>
                                    
                                    <Label Grid.Column="1" Grid.Row="0" Content="DeliveryMiles" HorizontalAlignment="Right"></Label>
                                    <TextBox Grid.Column="2" Grid.Row="0" Text="{Binding Path=DeliveryTabView.TPBillRefMV.DeliverMiles}" ></TextBox>

                                    <Label Grid.Column="1" Grid.Row="1" Content="Inital DeliveryFee" HorizontalAlignment="Right"></Label>
                                    <TextBox Grid.Column="2" Grid.Row="1" Text="{Binding Path=DeliveryTabView.TPBillRefMV.DeliverFeeOrigin}"></TextBox>

                                    <Label Grid.Column="1" Grid.Row="2" Content="DeliveryFee" HorizontalAlignment="Right"></Label>
                                    <TextBox Grid.Column="2" Grid.Row="2" Text="{Binding Path=DeliveryTabView.TPBillRefMV.DeliverFee}"></TextBox>

                                    <Button Grid.Column="1" Grid.Row="3" Name="DeliveryCaculator" Content="Caculator" Click="DeliveryCaculator_OnClick"></Button>
                                    <Button Grid.Column="2" Grid.Row="3" Name="DeliverySave" Content="Save" Click="DeliverySave_OnClick"></Button>

                                    <Button Grid.Column="1" Grid.ColumnSpan="2"  Grid.Row="4"  Content="print" Click="Print_Click"></Button>

                                </Grid>
                                
                            </Grid>
                            
                        </Grid>
                    </DockPanel>
                </TabItem>
            </TabControl>
        </DockPanel>
    </Grid>
</Window>
